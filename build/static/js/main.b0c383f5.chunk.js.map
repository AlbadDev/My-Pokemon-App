{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-services.ts","components/PokemonSearch.tsx","pages/pokemon-list.tsx","components/loadding.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","created","types","map","key","POKEMONS","hp","cp","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","textAlign","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","addPokemon","updatePokemon","isAddForm","validateForm","newForm","startsWith","endWith","test","isTypesValid","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"2OAIiBA,G,MAJE,WAAuC,IAAtCC,EAAqC,uDAAxB,IAAIC,KACjC,MAAM,GAAN,OAAUD,EAAKE,UAAf,YAA4BF,EAAKG,WAAW,EAA5C,YAAiDH,EAAKI,iBC4C3CC,EA7CI,SAACC,GAChB,IAAIC,EAEJ,OAAQD,GACN,IAAK,MACHC,EAAQ,gBACR,MACF,IAAK,MACHA,EAAQ,iBACR,MACF,IAAK,SACHA,EAAQ,kBACR,MACF,IAAK,UACHA,EAAQ,kBACR,MACF,IAAK,SACHA,EAAQ,iBACR,MACF,IAAK,MACHA,EAAQ,iBACR,MACF,IAAK,SACHA,EAAQ,uBACR,MACF,IAAK,SACHA,EAAQ,iBACR,MACF,IAAK,MACHA,EAAQ,uBACR,MACF,IAAK,WACHA,EAAQ,gBACR,MACF,IAAK,SACHA,EAAQ,cACR,MACF,QACEA,EAAQ,OAIZ,MAAM,QAAN,OAAeA,I,OCYJC,EAzC+B,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,QAAqC,IAA7BC,mBAA6B,MAAf,UAAe,IAExDC,qBAFwD,mBAE1EJ,EAF0E,KAEpEK,EAFoE,KAG3EC,EAAUC,cAgBhB,OACA,yBAAKC,UAAU,aAAaC,QAAS,kBAPhBC,EAOkCR,EAAQQ,QAN7DJ,EAAQK,KAAR,mBAAyBD,IADP,IAACA,GAO+CE,aAfjD,WACfP,EAASF,IAciFU,aAX5E,WACdR,EAAS,aAWX,yBAAKG,UAAU,kBAAkBM,MAAO,CAACX,YAAaH,IACpD,yBAAKQ,UAAU,cACb,yBAAKO,IAAKb,EAAQc,QAASC,IAAKf,EAAQgB,QAE1C,yBAAKV,UAAU,gBACb,yBAAKA,UAAU,gBACb,2BAAIN,EAAQgB,MACZ,2BAAG,+BAAQ1B,EAAWU,EAAQiB,WAC7BjB,EAAQkB,MAAMC,KAAI,SAAAtB,GAAI,OACrB,0BAAMuB,IAAKvB,EAAMS,UAAWV,EAAWC,IAAQA,W,gBCsE9CwB,EA/GoB,CAClC,CACCb,GAAI,EACJQ,KAAM,aACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,SAAU,UAClBD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,EACJQ,KAAM,eACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,OACRD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,EACJQ,KAAM,WACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,OACRD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,EACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UAAW,UACnBD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,EACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,SAAU,OAClBD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,EACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UACRD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,EACJQ,KAAM,WACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,SAAU,OAClBD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,EACJQ,KAAM,MACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UACRD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,EACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,YACRD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,GACJQ,KAAM,YACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UACRD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,GACJQ,KAAM,gBACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UACRD,QAAS,IAAIzB,MAEd,CACCgB,GAAI,GACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,OACRD,QAAS,IAAIzB,OC1GMgC,E,2GAMuB,IAAD,OACvC,OAAGC,KAAKC,MACCC,MAAM,kCACZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GACjBA,EAAQ,EAAKC,e,iCAIC5B,GAAoC,IAAD,OACnD,OAAGiB,KAAKC,MACCC,MAAM,kCAAD,OAAmCnB,IAC9CoB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAS,GAAI,OAAI,EAAKC,QAAQD,GAAQ,KAAOA,KACzCN,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GACjBA,EAAQ,EAAKC,SAASG,MAAK,SAAAvC,GAAO,OAAIQ,IAAOR,EAAQQ,Y,oCAIpCR,GAAqC,IAAD,OACvD,OAAGyB,KAAKC,MACCC,MAAM,kCAAD,OAAmC3B,EAAQQ,IAAM,CAC3DgC,OAAQ,MACRC,KAAMC,KAAKC,UAAU3C,GACrB4C,QAAS,CAAE,eAAgB,sBAE5BhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GAAY,IACrB3B,EAAOR,EAAPQ,GACFqC,EAAQ,EAAKT,SAASU,WAAU,SAAA9C,GAAO,OAAIA,EAAQQ,KAAOA,KAChE,EAAK4B,SAASS,GAAS7C,EACvBmC,EAAQnC,Q,oCAISA,GAAgC,IAAD,OAClD,OAAGyB,KAAKC,MACCC,MAAM,kCAAD,OAAmC3B,EAAQQ,IAAM,CAC3DgC,OAAQ,SACRI,QAAS,CAAE,eAAgB,sBAE5BhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GAAY,IACrB3B,EAAOR,EAAPQ,GACR,EAAK4B,SAAW,EAAKA,SAASW,QAAO,SAAA/C,GAAO,OAAIA,EAAQQ,KAAOA,KAC/D2B,EAAQ,S,iCAIMnC,GAAqC,IAAD,OAGpD,OAFAA,EAAQiB,QAAU,IAAIzB,KAAKQ,EAAQiB,SAEhCQ,KAAKC,MACCC,MAAM,iCAAkC,CAC7Ca,OAAQ,OACRC,KAAMC,KAAKC,UAAU3C,GACrB4C,QAAS,CAAE,eAAgB,sBAE5BhB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GACjB,EAAKC,SAAS3B,KAAKT,GACnBmC,EAAQnC,Q,oCAISgD,GAAmC,IAAD,OACrD,OAAGvB,KAAKC,MACCC,MAAM,oCAAD,OAAqCqB,IAChDpB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAI,EAAKC,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GAEjBA,EADgB,EAAKC,SAASW,QAAO,SAAA/C,GAAO,OAAIA,EAAQgB,KAAKiC,SAASD,Y,8BAM3DX,GACb,OAAoC,IAA7Ba,OAAOC,KAAKd,GAAMe,S,kCAGRpB,GACjBqB,QAAQrB,MAAMA,O,KAzGGR,EAEZY,SAAqBf,EAFTG,EAIZE,OAAkC4B,E,WC4C5BC,EAxC0B,WAAO,IAAD,EAErBrD,mBAAiB,IAFI,mBAEtC8C,EAFsC,KAEhCQ,EAFgC,OAGbtD,mBAAoB,IAHP,mBAGtCkC,EAHsC,KAG5BqB,EAH4B,KAiB7C,OACE,yBAAKnD,UAAU,OACf,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,QACf,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,eAEf,2BAAOT,KAAK,OAAO6D,YAAY,2BAAwBC,MAAOX,EAAMY,SAAU,SAAAC,GAAC,OAnB3D,SAACA,GACzB,IAAMb,EAAOa,EAAEC,OAAOH,MACtBH,EAAQR,GAELA,EAAKI,QAAU,EAChBK,EAAY,IAIdjC,EAAeuC,cAAcf,GAAMpB,MAAK,SAAAQ,GAAQ,OAAIqB,EAAYrB,MAUuB4B,CAAkBH,OAErG,yBAAKvD,UAAU,cACd8B,EAASjB,KAAI,SAACnB,GAAD,OACZ,kBAAC,IAAD,CAAMoB,IAAKpB,EAAQQ,GAAIyD,GAAE,oBAAejE,EAAQQ,IAAMF,UAAU,mBAC7DN,EAAQgB,eCHNkD,EA7BwB,WAAO,IAAD,EAEXhE,mBAAoB,IAFT,mBAEpCkC,EAFoC,KAE1BqB,EAF0B,KAS3C,OALAU,qBAAU,WACR3C,EAAe4C,cAAcxC,MAAK,SAAAQ,GAAQ,OAAIqB,EAAYrB,QACzD,IAID,6BACE,wBAAI9B,UAAU,UAAd,cACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,MACC8B,EAASjB,KAAI,SAAAnB,GAAO,OACnB,kBAAC,EAAD,CAAaoB,IAAKpB,EAAQQ,GAAIR,QAASA,QAG3C,kBAAC,IAAD,CAAMM,UAAU,+DACdM,MAAO,CAACyD,SAAS,QAAQC,OAAO,QAChCL,GAAG,gBACD,uBAAG3D,UAAU,kBAAb,WCNGiE,EAtBmB,WAEhC,OACE,yBAAKjE,UAAU,gCACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YAEjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACnB,yBAAKA,UAAU,aAGnB,gCC8DSkE,EAjEwD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAEtDvE,mBAAuB,MAF+B,mBAE7EF,EAF6E,KAEpE0E,EAFoE,KAQpF,OAJAP,qBAAU,WACR3C,EAAemD,YAAYF,EAAMG,OAAOpE,IAAIoB,MAAK,SAAA5B,GAAO,OAAI0E,EAAW1E,QACtE,CAACyE,EAAMG,OAAOpE,KAGf,6BACIR,EACA,yBAAKM,UAAU,OACb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,iBAAkBN,EAAQgB,MACxC,yBAAKV,UAAU,kBACb,yBAAKA,UAAU,cACb,yBAAKO,IAAKb,EAAQc,QAASC,IAAKf,EAAQgB,KAAMJ,MAAO,CAACiE,MAAO,QAASC,OAAQ,YAC9E,kBAAC,IAAD,CAAMb,GAAE,yBAAoBjE,EAAQQ,IAAMF,UAAU,4CAClD,uBAAGA,UAAU,kBAAb,UAGJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,2BAAOA,UAAU,oBACf,+BACE,4BACE,mCACA,4BAAI,gCAAUN,EAAQgB,QAExB,4BACE,6CACA,4BAAI,gCAAUhB,EAAQsB,MAExB,4BACE,4CACA,4BAAI,gCAAUtB,EAAQuB,MAExB,4BACE,qCACA,4BACGvB,EAAQkB,MAAMC,KAAI,SAAAtB,GAAI,OACtB,0BAAMuB,IAAKvB,EAAMS,UAAWV,EAAWC,IAAQA,QAGpD,4BACE,mDACA,4BAAKP,EAAWU,EAAQiB,cAKhC,yBAAKX,UAAU,eACb,kBAAC,IAAD,CAAM2D,GAAG,KAAT,eAOV,wBAAIrD,MAAO,CAACmE,UAAU,WAAW,kBAAC,EAAD,SCxD1BC,EAbyB,WAEtC,OACE,yBAAK1E,UAAU,UACb,yBAAKO,IAAI,iEAAiEE,IAAI,wBAC9E,8DACA,kBAAC,IAAD,CAAMkD,GAAG,IAAI3D,UAAU,oCAAvB,8B,eC6PS2E,EA1O+B,SAAC,GAA0B,IAAzBjF,EAAwB,EAAxBA,QAAQkF,EAAgB,EAAhBA,WAAgB,EAE9ChF,mBAAe,CACrCY,QAAS,CAAC6C,MAAO3D,EAAQc,SACzBE,KAAM,CAAE2C,MAAO3D,EAAQgB,KAAMmE,SAAS,GACtC7D,GAAI,CAACqC,MAAO3D,EAAQsB,GAAI6D,SAAS,GACjC5D,GAAI,CAACoC,MAAO3D,EAAQuB,GAAI4D,SAAS,GACjCjE,MAAO,CAACyC,MAAO3D,EAAQkB,MAAOiE,SAAS,KAP6B,mBAE/DC,EAF+D,KAEzDC,EAFyD,KAUhEjF,EAAUC,cAQViF,EAAU,SAACzF,GACf,OAAOuF,EAAKlE,MAAMyC,MAAMV,SAASpD,IAG7BmE,EAAoB,SAACH,GACzB,IAAM0B,EAAoB1B,EAAEC,OAAO9C,KAC7BwE,EAAoB3B,EAAEC,OAAOH,MAC7B8B,EAAe,eAAKF,EAAY,CAAE5B,MAAO6B,IAE/CH,EAAQ,2BAAID,GAASK,KAqCjBC,EAAa,WACjBlE,EAAekE,WAAW1F,GAAS4B,MAAM,kBAAMxB,EAAQK,KAAK,iBAGxDkF,EAAgB,WACpBnE,EAAemE,cAAc3F,GAAS4B,MAAM,kBAAMxB,EAAQK,KAAR,oBAA0BT,EAAQQ,SAIhFoF,EAAY,WAChB,OAAQV,GAGJW,EAAe,WACnB,IAAIC,EAAgBV,EAGpB,GAAGQ,IAAa,CAId,GAAIR,EAAKtE,QAAQ6C,MAAMoC,WAHT,qDAG+BX,EAAKtE,QAAQ6C,MAAMqC,QAFpD,QAMN,CACJ,IAAMP,EAAW,CAAE9B,MAAOyB,EAAKtE,QAAQ6C,MAAO3B,MAAO,GAAImD,SAAS,GAClEW,EAAO,2BAAOV,GAAQ,CAACtE,QAAS2E,QAN4C,CAC5E,IACMA,EAAkB,CAAE9B,MAAOyB,EAAKtE,QAAQ6C,MAAO3B,MAD5B,sBAC6CmD,SAAS,GAC/EW,EAAO,2BAAOV,GAAS,CAACtE,QAAS2E,KASrC,GAAI,gCAAuBQ,KAAKb,EAAKpE,KAAK2C,OAInC,CACL,IAAM8B,EAAkB,CAAE9B,MAAOyB,EAAKpE,KAAK2C,MAAO3B,MAAO,GAAImD,SAAS,GACtEW,EAAO,2BAAQA,GAAY,CAAE9E,KAAMyE,QANa,CAChD,IACMA,EAAkB,CAAE9B,MAAOyB,EAAKpE,KAAK2C,MAAO3B,MADzB,0CAC0CmD,SAAS,GAC5EW,EAAO,2BAAQA,GAAY,CAAE9E,KAAMyE,IAOrC,GAAI,eAAeQ,KAAKb,EAAK9D,GAAGqC,OAIzB,CACL,IAAM8B,EAAkB,CAAE9B,MAAOyB,EAAK9D,GAAGqC,MAAO3B,MAAO,GAAImD,SAAS,GACpEW,EAAO,2BAAQA,GAAY,CAAExE,GAAImE,QANK,CACtC,IACMA,EAAkB,CAAC9B,MAAOyB,EAAK9D,GAAGqC,MAAO3B,MADtB,+DACuCmD,SAAS,GACzEW,EAAO,2BAAQA,GAAY,CAAExE,GAAImE,IAOnC,GAAI,eAAeQ,KAAKb,EAAK7D,GAAGoC,OAIzB,CACL,IAAM8B,EAAkB,CAAE9B,MAAOyB,EAAK7D,GAAGoC,MAAO3B,MAAO,GAAImD,SAAS,GACpEW,EAAO,2BAAQA,GAAY,CAAEvE,GAAIkE,QANK,CACtC,IACMA,EAAkB,CAAC9B,MAAOyB,EAAK7D,GAAGoC,MAAO3B,MADtB,4DACuCmD,SAAS,GACzEW,EAAO,2BAAQA,GAAY,CAAEvE,GAAIkE,IAOnC,OADAJ,EAAQS,GACDA,EAAQ9E,KAAKmE,SAAWW,EAAQxE,GAAG6D,SAAWW,EAAQvE,GAAG4D,SAG5De,EAAe,SAACrG,GAEpB,OAAgC,IAA5BuF,EAAKlE,MAAMyC,MAAMP,SAAgBkC,EAAQzF,OAI1CuF,EAAKlE,MAAMyC,MAAMP,QAAU,IAAMkC,EAAQzF,KAW9C,OACE,0BAAMsG,SAAU,SAAAtC,GAAC,OApGE,SAACA,GACpBA,EAAEuC,iBACkBP,MAGlB7F,EAAQc,QAAUsE,EAAKtE,QAAQ6C,MAC/B3D,EAAQgB,KAAMoE,EAAKpE,KAAK2C,MACxB3D,EAAQsB,GAAI8D,EAAK9D,GAAGqC,MACpB3D,EAAQuB,GAAI6D,EAAK7D,GAAGoC,MACpB3D,EAAQkB,MAAOkE,EAAKlE,MAAMyC,MAC1BnC,EAAemE,cAAc3F,GAAS4B,MAAK,kBAAMxB,EAAQK,KAAR,oBAA0BT,EAAQQ,QAEnF0E,EAAaS,IAAkBD,KAwFZW,CAAaxC,KAChC,yBAAKvD,UAAU,OACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,kBACV4E,GACA,yBAAK5E,UAAU,cACZ,yBAAKO,IAAKb,EAAQc,QAASC,IAAKf,EAAQgB,KAAMJ,MAAO,CAACiE,MAAO,QAASC,OAAQ,YAC9E,0BAAMxE,UAAU,qDACd,uBAAGC,QAbC,WACpBiB,EAAe8E,cAActG,GAAS4B,MAAK,kBAAMxB,EAAQK,KAAK,iBAYnBH,UAAU,kBAArC,YAKR,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBAEXsF,KACA,yBAAKtF,UAAU,cACb,2BAAOiG,QAAQ,QAAf,SACA,2BAAO/F,GAAG,UAAUQ,KAAM,UAAUnB,KAAK,OAAOS,UAAU,eAAeqD,MAAOyB,EAAKtE,QAAQ6C,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAClIuB,EAAKtE,QAAQkB,OACZ,yBAAK1B,UAAU,2BACZ8E,EAAKtE,QAAQkB,QAQxB,yBAAK1B,UAAU,cACb,2BAAOiG,QAAQ,QAAf,OACA,2BAAO/F,GAAG,OAAOQ,KAAM,OAAOnB,KAAK,OAAOS,UAAU,eAAeqD,MAAOyB,EAAKpE,KAAK2C,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MACzHuB,EAAKpE,KAAKgB,OACT,yBAAK1B,UAAU,2BACZ8E,EAAKpE,KAAKgB,QAKnB,yBAAK1B,UAAU,cACb,2BAAOiG,QAAQ,MAAf,gBACA,2BAAO/F,GAAG,KAAKQ,KAAK,KAAKnB,KAAK,SAASS,UAAU,eAAeqD,MAAOyB,EAAK9D,GAAGqC,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MACpHuB,EAAK9D,GAAGU,OACP,yBAAK1B,UAAU,2BACZ8E,EAAK9D,GAAGU,QAKjB,yBAAK1B,UAAU,cACb,2BAAOiG,QAAQ,MAAf,gBACA,2BAAO/F,GAAG,KAAKQ,KAAK,KAAKnB,KAAK,SAASS,UAAU,eAAeqD,MAAOyB,EAAK7D,GAAGoC,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MACtHuB,EAAK7D,GAAGS,OACJ,yBAAK1B,UAAU,2BACZ8E,EAAK7D,GAAGS,QAKlB,yBAAK1B,UAAU,cACb,wCApMQ,CACtB,SAAU,MAAO,MAAO,UAAW,SAAU,WAC7C,SAAU,YAAQ,MAAO,SAAU,OAmMda,KAAI,SAAAtB,GAAI,OACb,yBAAKuB,IAAKvB,EAAMe,MAAO,CAAC4F,aAAc,SACpC,+BACE,2BAAOhG,GAAIX,EAAMA,KAAK,WAAWS,UAAU,YAAYqD,MAAO9D,EAAM4G,UAAWP,EAAarG,GAAO6G,QAASpB,EAAQzF,GAAO+D,SAAU,SAAAC,GAAC,OAtLzI,SAAChE,EAAcgE,GAChC,IACI4B,EADY5B,EAAEC,OAAO4C,QAMvBjB,EAAW,CAAE9B,MADcyB,EAAKlE,MAAMyC,MAAMgD,OAAO,CAAC9G,KAKpD4F,EAAW,CAAE9B,MADcyB,EAAKlE,MAAMyC,MAAMZ,QAAO,SAAC6D,GAAD,OAAyBA,IAAgB/G,MAI9FwF,EAAQ,2BAAID,GAAS,CAAElE,MAAOuE,KAwKgIoB,CAAWhH,EAAMgE,MAC3J,8BACE,uBAAGvD,UAAWV,EAAWC,IAASA,WAO9C,yBAAKS,UAAU,sBAEb,4BAAQT,KAAK,SAASS,UAAU,OAAhC,kBC5NDwG,EAtBqD,SAAC,GAAe,IAAbrC,EAAY,EAAZA,MAAY,EAEnDvE,mBAAuB,MAF4B,mBAE1EF,EAF0E,KAEjE0E,EAFiE,KAQjF,OAJAP,qBAAU,WACT3C,EAAemD,YAAYF,EAAMG,OAAOpE,IAAIoB,MAAK,SAAA5B,GAAO,OAAI0E,EAAW1E,QACrE,CAACyE,EAAMG,OAAOpE,KAGf,6BACIR,EACA,yBAAKM,UAAU,OACX,wBAAIA,UAAU,iBAAd,aAAuCN,EAAQgB,MAC/C,kBAAC,EAAD,CAAahB,QAASA,EAASkF,YAAY,KAGhD,wBAAItE,MAAO,CAACmE,UAAU,WAAW,kBAAC,EAAD,MAAjC,OC1BcgC,EAWjB,WACCvG,GAOE,IANFc,EAMC,uDANY,IACbC,EAKC,uDALY,GACbP,EAIC,uDAJc,mBACfF,EAGC,uDAHiB,oEAClBI,EAEC,uDAFsB,CAAC,UACxBD,EACC,uDADe,IAAIzB,KACnB,yBAjBFgB,QAiBE,OAhBFc,QAgBE,OAfFC,QAeE,OAdFP,UAcE,OAbFF,aAaE,OAZFI,WAYE,OAXFD,aAWE,EAEDQ,KAAKjB,GAAKA,EACViB,KAAKH,GAAKA,EACVG,KAAKF,GAAKA,EACVE,KAAKT,KAAOA,EACZS,KAAKX,QAAUA,EACfW,KAAKP,MAAQA,EACbO,KAAKR,QAAUA,GCXL+F,EAZuB,WAAO,IAAD,EAC3B9G,oBAAiB,IAAIV,MAAOyH,WAAlCzG,EADiC,sBAEtBN,mBAAkB,IAAI6G,EAAQvG,IAAzCR,EAFiC,oBAIxC,OACI,yBAAKM,UAAU,OACX,wBAAIA,UAAU,iBAAd,sBACA,kBAAC,EAAD,CAAaN,QAASA,EAAUkF,YAAY,MCXnCgC,E,mGAGJC,EAAkBC,GAAqC,IAAD,OACzDC,EAAgC,UAAbF,GAAqC,cAAbC,EAEjD,OAAO,IAAIlF,SAAQ,SAAAC,GAChBmF,YAAW,WACN,EAAKD,gBAAkBA,EACvBlF,EAAQkF,KACX,Y,KAVQH,EACVG,iBAA2B,ECctC,IA8GeE,EA9GkB,WAE/B,IAAMnH,EAAUC,cAFqB,EAIbH,mBAAe,CACrCiH,SAAU,CAAExD,MAAO,IACnByD,SAAU,CAAEzD,MAAO,MANgB,mBAI9ByB,EAJ8B,KAIxBC,EAJwB,OASPnF,mBAAiB,sDATV,mBAS9BsH,EAT8B,KASrBC,EATqB,KAW/BzD,EAAoB,SAACH,GACzB,IAAM0B,EAAoB1B,EAAEC,OAAO9C,KAC7BwE,EAAqB3B,EAAEC,OAAOH,MAC9B8B,EAAe,eAAMF,EAAY,CAAE5B,MAAO6B,IAEhDH,EAAQ,2BAAKD,GAASK,KA+BlBY,EAAe,SAACxC,GACpBA,EAAEuC,iBA7BiB,WACnB,IAAIN,EAAgBV,EAGpB,GAAGA,EAAK+B,SAASxD,MAAMP,OAAS,EAAG,CACjC,IACMqC,EAAkB,CAAE9B,MAAOyB,EAAK+B,SAASxD,MAAO3B,MAD7B,+DAC8CmD,SAAS,GAChFW,EAAO,2BAAQA,GAAY,CAAEqB,SAAU1B,QAClC,CACL,IAAMA,EAAkB,CAAE9B,MAAOyB,EAAK+B,SAASxD,MAAO3B,MAAO,GAAImD,SAAS,GAC1EW,EAAO,2BAAQA,GAAY,CAAEqB,SAAU1B,IAIzC,GAAGL,EAAKgC,SAASzD,MAAMP,OAAS,EAAG,CACjC,IACMqC,EAAkB,CAAC9B,MAAOyB,EAAKgC,SAASzD,MAAO3B,MAD5B,kEAC6CmD,SAAS,GAC/EW,EAAO,2BAAQA,GAAY,CAAEsB,SAAU3B,QAClC,CACL,IAAMA,EAAkB,CAAE9B,MAAOyB,EAAKgC,SAASzD,MAAO3B,MAAO,GAAImD,SAAS,GAC1EW,EAAO,2BAAQA,GAAY,CAAEsB,SAAU3B,IAKzC,OAFAJ,EAAQS,GAEDA,EAAQqB,SAAShC,SAAWW,EAAQsB,SAASjC,QAKhCU,KAElB4B,EAAW,oDACXP,EAAsBQ,MAAMtC,EAAK+B,SAASxD,MAAOyB,EAAKgC,SAASzD,OAAO/B,MAAK,SAAAyF,GACrEA,EAKJjH,EAAQK,KAAK,aAJXgH,EAAW,4DAUnB,OACE,0BAAMtB,SAAU,SAACtC,GAAD,OAAOwC,EAAaxC,KAClC,yBAAKvD,UAAU,OACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBAEZkH,GAAW,yBAAKlH,UAAU,cACzB,yBAAKA,UAAU,6BACZkH,IAIL,yBAAKlH,UAAU,cACb,2BAAOiG,QAAQ,YAAf,eACA,2BAAO/F,GAAG,WAAWX,KAAK,OAAOmB,KAAK,WAAWV,UAAU,eAAeqD,MAAOyB,EAAK+B,SAASxD,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAEtIuB,EAAK+B,SAASnF,OACf,yBAAK1B,UAAU,2BACb8E,EAAK+B,SAASnF,QAIlB,yBAAK1B,UAAU,cACb,2BAAOiG,QAAQ,YAAf,gBACA,2BAAO/F,GAAG,WAAWX,KAAK,WAAWmB,KAAK,WAAWV,UAAU,eAAeqD,MAAOyB,EAAKgC,SAASzD,MAAOC,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAE1IuB,EAAKgC,SAASpF,OACf,yBAAK1B,UAAU,2BACb8E,EAAKgC,SAASpF,SAIpB,yBAAK1B,UAAU,sBAEb,4BAAQT,KAAK,SAASS,UAAU,OAAhC,kB,QCpGDqH,EAXM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCACnB,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAACC,GAExB,OADwBd,EAAsBG,gBAKvC,kBAACO,EAAcI,GAHb,kBAAC,IAAD,CAAU/D,GAAI,CAAEgE,SAAU,iBC4BxBC,EAxBgB,WAC3B,OACC,kBAAC,IAAD,KACI,6BAEG,6BACI,yBAAK5H,UAAU,oBACX,kBAAC,IAAD,CAAM2D,GAAG,IAAI3D,UAAU,qBAAvB,aAIR,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAc6H,OAAK,EAACC,KAAK,IAAIP,UAAW3D,IACxC,kBAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,SAASP,UAAWN,IACtC,kBAAC,EAAD,CAAcY,OAAK,EAACC,KAAK,YAAYP,UAAW3D,IAChD,kBAAC,EAAD,CAAciE,OAAK,EAACC,KAAK,eAAeP,UAAWb,IACnD,kBAAC,EAAD,CAAcmB,OAAK,EAACC,KAAK,qBAAqBP,UAAWf,IACzD,kBAAC,EAAD,CAAcsB,KAAK,gBAAgBP,UAAWrD,IAC9C,kBAAC,IAAD,CAAOqD,UAAW7C,QCzBlCqD,IAASN,OACL,kBAAC,EAAD,MACAO,SAASC,eAAe,W","file":"static/js/main.b0c383f5.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date() ): string => {\r\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`\r\n  }\r\n\r\n  export default formatDate;","const formatType = (type: string): string => {\r\n    let color: string;\r\n   \r\n    switch (type) {\r\n      case 'Feu': \r\n        color = 'red lighten-1'; \r\n        break; \r\n      case 'Eau': \r\n        color = 'blue lighten-1'; \r\n        break; \r\n      case 'Plante': \r\n        color = 'green lighten-1'; \r\n        break; \r\n      case 'Insecte': \r\n        color = 'brown lighten-1'; \r\n        break; \r\n      case 'Normal': \r\n        color = 'grey lighten-3'; \r\n        break; \r\n      case 'Vol': \r\n        color = 'blue lighten-3'; \r\n        break; \r\n      case 'Poison': \r\n        color = 'deep-purple accent-1'; \r\n        break; \r\n      case 'Fée': \r\n        color = 'pink lighten-4'; \r\n        break; \r\n      case 'Psy': \r\n        color = 'deep-purple darken-2'; \r\n        break; \r\n      case 'Electrik': \r\n        color = 'lime accent-1'; \r\n        break; \r\n      case 'Combat': \r\n        color = 'deep-orange'; \r\n        break; \r\n      default: \r\n        color = 'grey'; \r\n        break; \r\n    }\r\n   \r\n    return `chip ${color}`;\r\n  }\r\n\r\nexport default formatType;","import React, {FunctionComponent,useState} from \"react\"\r\nimport Pokemon from \"../models/pokemon\";\r\nimport \"./pokemon-card.css\"\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\ntype Props = {\r\n    pokemon: Pokemon,\r\n    borderColor?: string\r\n};\r\n\r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon,borderColor = '#009688'}) => {\r\n\r\n    const [color,setColor] = useState<string>();\r\n    const history = useHistory();\r\n    \r\n    const showBorder = () => {\r\n        setColor(borderColor);\r\n    }\r\n\r\n    const hideColor = () => {\r\n        setColor('#f5f5f5'); \r\n    }\r\n\r\n    const gotoPokemon = (id: number) => {\r\n      history.push(`pokemons/${id}`)\r\n    }\r\n   \r\n\r\n\r\n    return (\r\n    <div className=\"col s12 m4\" onClick={() => gotoPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideColor}>\r\n      <div className=\"card horizontal\" style={{borderColor: color}}>\r\n        <div className=\"card-image\"> \r\n          <img src={pokemon.picture} alt={pokemon.name}/>\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p><small>{formatDate(pokemon.created)}</small></p>\r\n            {pokemon.types.map(type => (\r\n              <span key={type} className={formatType(type)}>{type}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n  \r\n\r\n\r\nexport default PokemonCard;","import Pokemon from './pokemon';\r\n   \r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Groupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n  \r\nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\r\nimport POKEMONS from \"../models/mock-pokemon\";\r\n  \r\nexport default class PokemonService {\r\n  \r\n  static pokemons:Pokemon[] = POKEMONS;\r\n  \r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n  \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n  \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\r\n    }); \r\n  }\r\n  \r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    }); \r\n  }\r\n  \r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n  \r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n  \r\n  }\r\n  \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n  \r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-services';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PokemonSearch: FunctionComponent = () => {\r\n  \r\n  const [term, setTerm] = useState<string>('');\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n \r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n \r\n    if(term.length <= 1) {\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n \r\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\r\n  }\r\n  \r\n  return (\r\n    <div className=\"row\"> \r\n    <div className=\"col s12 m6 offset-m3\"> \r\n      <div className=\"card\"> \r\n      <div className=\"card-content\"> \r\n        <div className=\"input-field\">\r\n          \r\n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \r\n        </div> \r\n        <div className='collection'>\r\n        {pokemons.map((pokemon) => (\r\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\r\n            {pokemon.name}\r\n          </Link>\r\n        ))}\r\n        </div> \r\n      </div> \r\n      </div> \r\n    </div> \r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport Pokemon from '../models/pokemon'; \r\nimport PokemonCard from '../components/pokemon-card';\r\nimport PokemonService from '../services/pokemon-services'  ;\r\nimport {Link} from 'react-router-dom';\r\nimport PokemonSearch from '../components/PokemonSearch';\r\n\r\n\r\nconst PokemonList: FunctionComponent = () => {\r\n\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"container\"> \r\n        <div className=\"row\">\r\n          <PokemonSearch /> \r\n          {pokemons.map(pokemon => (\r\n            <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n          ))}\r\n        </div>\r\n        <Link className='btn-floating btn-large waves-effect wave-light red z-depth-3'\r\n          style={{position:'fixed',bottom:'25px'}}\r\n          to='/pokemon/add'>\r\n            <i className='material-icons'>add</i>\r\n          </Link>\r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n  \r\nexport default PokemonList;","import React, { FunctionComponent } from 'react';\r\n  \r\nconst Loader: FunctionComponent = () => {\r\n   \r\n  return (\r\n    <div className=\"preloader-wrapper big active\"> \r\n      <div className=\"spinner-layer spinner-blue\"> \r\n        <div className=\"circle-clipper left\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n        <div className=\"gap-patch\"> \r\n          <div className=\"circle\"></div> \r\n        </div><div className=\"circle-clipper right\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n      </div> \r\n      <div>\r\n      </div>\r\n\r\n\r\n   </div> \r\n  );\r\n}\r\n   \r\nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\n// import { parseCommandLine } from 'typescript';\r\nimport PokemonService from '../services/pokemon-services';\r\nimport Loader from '../components/loadding';\r\n\r\n\r\n\r\ntype Params = { id: string };\r\n  \r\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon))\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\"> \r\n            <h2 className=\"header center\">{ pokemon.name }</h2>\r\n            <div className=\"card hoverable\"> \r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-ligth\">\r\n                  <i className=\"material-icons\">edit</i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr> \r\n                        <td>Nom</td> \r\n                        <td><strong>{ pokemon.name }</strong></td> \r\n                      </tr>\r\n                      <tr> \r\n                        <td>Points de vie</td> \r\n                        <td><strong>{ pokemon.hp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Dégâts</td> \r\n                        <td><strong>{ pokemon.cp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Types</td> \r\n                        <td>\r\n                          {pokemon.types.map(type => (\r\n                           <span key={type} className={formatType(type)}>{type}</span>\r\n                          ))}</td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Date de création</td> \r\n                        <td>{formatDate(pokemon.created)}</td> \r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 style={{textAlign:'center'}}><Loader/></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n  \r\nconst PageNotFound: FunctionComponent = () => {\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\r\n      <h1>Hey, cette page n'existe pas !</h1> \r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PageNotFound;","import React, { FunctionComponent,useState } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-services';\r\n\r\n  \r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  isEditForm: boolean\r\n};\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean,\r\n  \r\n}\r\n\r\ntype Form = {\r\n  picture: Field,\r\n  name: Field,\r\n  hp: Field,\r\n  cp: Field,\r\n  types: Field\r\n}\r\n\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({pokemon,isEditForm}) => {\r\n  \r\n  const [form, setForm] = useState<Form>({\r\n    picture: {value: pokemon.picture},\r\n    name: { value: pokemon.name, isValid: true},\r\n    hp: {value: pokemon.hp, isValid: true},\r\n    cp: {value: pokemon.cp, isValid: true},\r\n    types: {value: pokemon.types, isValid: true}\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n   \r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string =e.target.value;\r\n    const newField: Field = {[fieldName]: { value: fieldValue}};\r\n\r\n    setForm({...form, ...newField});\r\n  }\r\n\r\n\r\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if(checked) {\r\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      newField = { value: newTypes };\r\n    } else {\r\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({...form, ...{ types: newField }});\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n\r\n    if(isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name =form.name.value;\r\n      pokemon.hp =form.hp.value;\r\n      pokemon.cp =form.cp.value;\r\n      pokemon.types =form.types.value;\r\n      PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\r\n    \r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n  }\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then( () => history.push('/pokemons'));\r\n  }\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then( () => history.push(`/pokemons/${pokemon.id}`));\r\n  }\r\n\r\n\r\n  const isAddForm = () => {\r\n    return !isEditForm;\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n    \r\n    // Validate the Url\r\n    if(isAddForm()) {\r\n      const start = 'http://assets.pokemon.com/assets/cms2/img/detail';\r\n      const end = '.png';\r\n\r\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endWith(end)) {\r\n        const errorMsg: string = 'url image not valid';\r\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\r\n        newForm = {...form, ...{picture: newField} };\r\n      }else {\r\n        const newField = { value: form.picture.value, error: '', isValid: true };\r\n        newForm = {...form,...{picture: newField} }; \r\n      }\r\n    }\r\n\r\n\r\n    // Validator name\r\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\r\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    // Validator hp\r\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    // Validator cp\r\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\r\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  }\r\n\r\n  const isTypesValid = (type: string): boolean => {\r\n\r\n    if (form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    if(form.types.value.length >= 3 && !hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then(() => history.push('/pokemons'));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n             { isEditForm && (\r\n               <div className=\"card-image\">\r\n                  <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                  <span className='btn-floating halfway-fab waves-effect waves-light' >\r\n                    <i onClick={deletePokemon} className='material-icons'>delete</i>\r\n                  </span>\r\n                </div>\r\n             )}\r\n            \r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon picture */}\r\n                { isAddForm() && (\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Image</label>\r\n                    <input id=\"picture\" name= \"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\r\n                      {form.picture.error && \r\n                        <div className=\"card-panel red accent-1\">\r\n                          {form.picture.error}\r\n                        </div>\r\n                      }\r\n                  </div>\r\n                )}\r\n                \r\n\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" name= \"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                    {form.name.error && \r\n                      <div className=\"card-panel red accent-1\">\r\n                        {form.name.error}\r\n                    </div>\r\n                    }\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                    {form.hp.error && \r\n                      <div className=\"card-panel red accent-1\">\r\n                        {form.hp.error}\r\n                      </div>\r\n                    }\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.cp.error && \r\n                       <div className=\"card-panel red accent-1\">\r\n                         {form.cp.error}\r\n                      </div>\r\n                 }\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n   \r\nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-services';\r\nimport Loader from '../components/loadding';\r\n\r\n\r\ntype Params = { id: string };\r\n  \r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n   PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n       <h4 style={{textAlign:'center'}}><Loader /> </h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonEdit;","export default class Pokemon {\r\n    // 1. Typage des propiétés d'un pokémon.\r\n    id: number;\r\n    hp: number;\r\n    cp: number;\r\n    name: string;\r\n    picture: string;\r\n    types: Array<string>;\r\n    created: Date;\r\n     \r\n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n    constructor(\r\n     id: number,\r\n     hp: number = 100,\r\n     cp: number = 10,\r\n     name: string = 'Pokemon Name ...',\r\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/xxx.png',\r\n     types: Array<string> = ['Normal'],\r\n     created: Date = new Date()\r\n    ) {\r\n     // 3. Initialisation des propiétés d'un pokémons.\r\n     this.id = id;\r\n     this.hp = hp;\r\n     this.cp = cp;\r\n     this.name = name;\r\n     this.picture = picture;\r\n     this.types = types;\r\n     this.created = created;\r\n    }\r\n   }","import React, {FunctionComponent,useState} from 'react';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\n\r\nconst PokemonAdd: FunctionComponent = () => {\r\n    const [id] = useState<number>(new Date().getTime());\r\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\r\n\r\n    return (\r\n        <div className='row'>\r\n            <h2 className='header center'>Ajouter un pokemon</h2>\r\n            <PokemonForm pokemon={pokemon}  isEditForm={false}></PokemonForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonAdd;","export default class AuthenticationService {\r\n    static isAuthenticated: boolean = false;\r\n\r\n    static login(username: string, password: string): Promise<boolean> {\r\n        const isAuthenticated = (username === 'admin' && password === 'admin2021');\r\n\r\n        return new Promise(resolve => {\r\n           setTimeout(() => {\r\n                this.isAuthenticated = isAuthenticated;\r\n                resolve(isAuthenticated);\r\n           },1000);\r\n        });\r\n    }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../services/authentication-service';\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  username: Field,\r\n  password: Field\r\n}\r\n\r\nconst Login: FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: '' },\r\n    password: { value: '' },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (admin / admin2021)');\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if(form.username.value.length < 3) {\r\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\r\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if(form.password.value.length < 6) {\r\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\r\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      setMessage('👉 Tentative de connexion en cours ...');\r\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\r\n        if(!isAuthenticated) {\r\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\r\n          return;\r\n        }\r\n        \r\n        history.push('/pokemons');\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && <div className=\"form-group\">\r\n                  <div className=\"card-panel grey lighten-5\">\r\n                    {message}\r\n                  </div>\r\n                </div>}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.username.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.username.error} \r\n                  </div>} \r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.password.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.password.error} \r\n                  </div>} \r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n \r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './services/authentication-service';\r\n  \r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthenticated = AuthenticationService.isAuthenticated;\r\n    if (!isAuthenticated) {    \r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n  \r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n  \r\nexport default PrivateRoute;","import React,{FunctionComponent } from \"react\";\r\nimport PokemonList from './pages/pokemon-list';\r\nimport PokemonsDetail from './pages/pokemon-detail';\r\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport PageNotFound from './pages/page-not-found';\r\nimport PokemonEdit from './pages/pokemon-edit';\r\nimport PokemonAdd from './pages/pokemon-add';\r\nimport Login from './pages/login';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\n\r\n\r\nconst App: FunctionComponent = () => {\r\n    return (\r\n     <Router>\r\n         <div>\r\n            {/* navigator bar of all our Application */}\r\n            <nav>\r\n                <div className=\"nav-wrapper teal\">\r\n                    <Link to=\"/\" className=\"brand-logo center\">Pokedex</Link>\r\n                </div>   \r\n            </nav>\r\n            {/* Gestionary System of for all our App router */}\r\n            <Switch>\r\n                <PrivateRoute exact path=\"/\" component={PokemonList} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n                <PrivateRoute exact path='/pokemon/add' component={PokemonAdd} />\r\n                <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n                <PrivateRoute path=\"/pokemons/:id\" component={PokemonsDetail} />\r\n                <Route component={PageNotFound} />\r\n            </Switch>\r\n        </div>\r\n     </Router>\r\n    )\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}